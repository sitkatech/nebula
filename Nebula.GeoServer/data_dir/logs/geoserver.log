2020-07-06 19:30:46,811 WARN [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
2020-07-06 19:30:47,713 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-07-06 19:46:56,070 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 19:46:56,071 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 19:46:56,072 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 19:46:56,072 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 19:46:56,072 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 19:46:56,071 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 19:57:04,054 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-06 19:57:04,130 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-06 19:57:04,162 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-06 19:57:04,169 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 143 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 145 more
2020-07-06 19:57:04,169 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 19:57:04,169 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 19:57:04,211 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 19:57:04,194 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 134 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 143 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 145 more
2020-07-06 19:57:04,236 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor299.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:07:39,427 WARN [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
2020-07-06 21:07:40,516 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-07-06 21:07:43,926 WARN [servlet.BaseMapServlet] - Cannot delete file:/usr/local/tomcat/work/Catalina/localhost/geoserver/wicket-filestore
2020-07-06 21:14:20,455 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 21:14:20,457 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 21:14:20,457 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 21:14:20,456 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 21:14:20,456 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 21:14:20,456 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-06 21:34:36,114 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-06 21:34:36,297 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:34:36,408 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:34:36,435 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-06 21:34:36,442 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-06 21:34:36,445 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:34:36,446 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:34:36,460 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:34:36,463 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:47:11,120 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-06 21:47:11,123 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-06 21:47:11,131 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:47:11,131 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:47:11,144 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:47:11,145 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:56:38,453 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-06 21:56:38,460 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 21:56:38,475 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 22:24:00,520 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-06 22:24:00,523 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-06 22:24:00,528 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor332.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 19:48:29,214 WARN [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
2020-07-07 19:48:30,163 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-07-07 19:48:35,809 WARN [servlet.BaseMapServlet] - Cannot delete file:/usr/local/tomcat/work/Catalina/localhost/geoserver/wicket-filestore
2020-07-07 19:48:49,605 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 19:48:49,607 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 19:48:49,606 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 19:48:49,606 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 19:48:49,607 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 19:48:49,607 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 20:17:44,673 WARN [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
2020-07-07 20:17:45,791 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-07-07 20:17:51,135 WARN [servlet.BaseMapServlet] - Cannot delete file:/usr/local/tomcat/work/Catalina/localhost/geoserver/wicket-filestore
2020-07-07 20:22:15,395 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 20:22:15,395 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 20:22:15,395 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 20:22:15,395 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 20:22:15,395 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 20:22:15,395 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-07 20:43:18,384 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-07 20:43:18,395 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-07 20:43:18,394 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-07 20:43:18,394 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-07 20:43:18,384 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-07 20:43:18,384 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-07 20:43:18,469 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 20:43:18,469 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 20:43:18,469 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 20:43:18,469 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 20:43:18,469 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 20:43:18,469 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 20:43:18,526 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 20:43:18,532 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 20:43:18,531 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 20:43:18,531 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 20:43:18,529 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 20:43:18,529 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 22:02:37,176 WARN [geotools.jdbc] - Error occurred closing connection
2020-07-07 22:02:37,191 ERROR [renderer.lite] - java.io.IOException
java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-07 22:02:37,231 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Rendering process failed
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:635)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:276)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:133)
	at org.geoserver.wms.GetMap.executeInternal(GetMap.java:707)
	at org.geoserver.wms.GetMap.run(GetMap.java:287)
	at org.geoserver.wms.GetMap.run(GetMap.java:110)
	at org.geoserver.wms.DefaultWebMapService.getMap(DefaultWebMapService.java:253)
	at jdk.internal.reflect.GeneratedMethodAccessor273.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:55)
	at org.geoserver.gwc.wms.CacheSeedingWebMapService.invoke(CacheSeedingWebMapService.java:31)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:73)
	at org.geoserver.gwc.wms.CachingWebMapService.invoke(CachingWebMapService.java:53)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy60.getMap(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:879)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:352)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:171)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:260)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1839)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.RuntimeException: java.io.IOException
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:165)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:45)
	at org.geoserver.feature.RetypingFeatureCollection.features(RetypingFeatureCollection.java:31)
	at org.geoserver.security.decorators.SecuredFeatureCollection.features(SecuredFeatureCollection.java:43)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:74)
	at org.geoserver.security.decorators.SecuredSimpleFeatureCollection.features(SecuredSimpleFeatureCollection.java:31)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2603)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2189)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:890)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:594)
	... 133 more
Caused by: java.io.IOException
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:625)
	at org.geotools.data.store.ContentFeatureSource.getReader(ContentFeatureSource.java:609)
	at org.geotools.data.store.ContentFeatureCollection.features(ContentFeatureCollection.java:163)
	... 142 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe (Write failed)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1805)
	at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:3581)
	at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:3482)
	at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3062)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6120)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6106)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection$1ConnectionCommand.doExecute(SQLServerConnection.java:1756)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectionCommand(SQLServerConnection.java:1761)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setAutoCommit(SQLServerConnection.java:1901)
	at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:371)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setAutoCommit(PoolingDataSource.java:328)
	at org.geotools.jdbc.JDBCFeatureSource.getReaderInternal(JDBCFeatureSource.java:582)
	... 144 more
2020-07-21 22:12:26,388 WARN [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
2020-07-21 22:12:30,667 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-07-21 22:12:36,466 WARN [servlet.BaseMapServlet] - Cannot delete file:/usr/local/tomcat/work/Catalina/localhost/geoserver/wicket-filestore
2020-07-21 22:16:26,225 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-21 22:16:26,226 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-21 22:16:26,226 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-21 22:16:26,226 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-21 22:16:26,235 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-07-21 22:16:26,235 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
CONFIG 2024-10-23 21:30:26,868 [main][Log4J2Logger.java:215] : Logging policy: Log4J2
CONFIG 2024-10-23 21:30:26,945 [main][Log4J2Logger.java:189] : Factory implementations for category GridCoverageFactory:
  org.geotools.coverage.grid.GridCoverageFactory
CONFIG 2024-10-23 21:30:27,086 [main][Log4J2Logger.java:189] : Factory implementations for category FilterFactory:
  org.geotools.filter.FilterFactoryImpl
CONFIG 2024-10-23 21:30:27,094 [main][Log4J2Logger.java:189] : Factory implementations for category StyleFactory:
  org.geotools.styling.StyleFactoryImpl
CONFIG 2024-10-23 21:30:27,097 [main][Log4J2Logger.java:189] : Factory implementations for category FeatureFactory:
  org.geotools.feature.LenientFeatureFactoryImpl
  org.geotools.feature.ValidatingFeatureFactoryImpl
DEBUG 2024-10-23 21:30:27,247 [main][Log4J2Logger.java:220] : Extension lookup 'XStreamPersisterInitializer', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:30:27,247 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:30:27,248 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionProvider', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:30:27,249 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:30:27,262 [main][Log4J2Logger.java:220] : CONFIGURING GEOSERVER LOGGING -------------------------
23 Oct 21:30:27 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
23 Oct 21:30:28 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
23 Oct 21:30:28 CONFIG [org.geoserver] - Loading catalog /opt/geoserver/data_dir
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'backbone_narrow'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'generic'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'line'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'backbone_wide'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'point'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'raster'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'regional_subbasin'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'polygon'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'regional_subbasin_wide'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'watershed'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'watershed_outline_only'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'watershed_name_only'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'watershed_purple_outline_only'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'watershed_purple'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded style 'watershed_yellow'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded default workspace 'Nebula'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded workspace 'Nebula'
23 Oct 21:30:28 CONFIG [org.geoserver] - Loaded data store 'GeoServerSqlDataSource', enabled
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded feature type 'Backbones', enabled
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded layer 'Backbones'
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded feature type 'Watersheds', enabled
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded layer 'Watersheds'
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded feature type 'RegionalSubbasins', enabled
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded layer 'RegionalSubbasins'
23 Oct 21:30:29 CONFIG [org.geoserver] - Read catalog in 913.1 ms
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded service 'wms', enabled
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--5fa98cd6:192bb49ceb3:-8000', enabled
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded service 'csw', enabled
23 Oct 21:30:29 CONFIG [org.geoserver] - Loaded service 'WPSInfoImpl-75c32c4c:17151e9e653:-8000', enabled
23 Oct 21:30:29 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:30:29 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
23 Oct 21:30:29 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
23 Oct 21:30:29 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver/data_dir/gwc
23 Oct 21:30:29 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver/data_dir/gwc
23 Oct 21:30:29 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
23 Oct 21:30:29 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
23 Oct 21:30:29 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
23 Oct 21:30:29 CONFIG [gwc.layer] - Loaded 2 tile layers in 10.14 ms
23 Oct 21:30:29 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver/data_dir/gwc contained no blob store infos.
23 Oct 21:30:29 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver/data_dir/gwc, using it as the default prefix.
23 Oct 21:30:29 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
23 Oct 21:30:30 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
23 Oct 21:30:30 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
23 Oct 21:30:30 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
23 Oct 21:30:30 INFO   [flow.config] - Loaded control-flow rule: user=6
23 Oct 21:30:30 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
23 Oct 21:30:30 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
23 Oct 21:30:30 CONFIG [geoserver.flow] - Control-flow active with 6 flow controllers
23 Oct 21:30:30 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:30:30 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:30:30 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:30:30 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:30:31 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
23 Oct 21:30:31 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
23 Oct 21:30:31 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
23 Oct 21:30:31 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
23 Oct 21:30:31 INFO   [geoserver.monitor] - Monitor extension enabled
23 Oct 21:30:33 CONFIG [geoserver.wps] - Found 5 bindable processes in GeoServer specific processes
23 Oct 21:30:33 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
23 Oct 21:30:33 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
23 Oct 21:30:33 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
23 Oct 21:30:33 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
23 Oct 21:30:33 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
23 Oct 21:30:33 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
23 Oct 21:30:33 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
23 Oct 21:30:33 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
23 Oct 21:30:33 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
23 Oct 21:30:33 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
23 Oct 21:30:33 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
23 Oct 21:30:33 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:30:33 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:30:33 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:30:33 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
23 Oct 21:30:33 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
23 Oct 21:30:33 CONFIG [diskquota.DiskQuotaMonitor] - 2 layers attached to global quota 20.0 GB
23 Oct 21:30:33 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
23 Oct 21:30:33 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
23 Oct 21:30:33 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
23 Oct 21:30:34 CONFIG [geoserver.security] - Start reloading user/groups for service named default
23 Oct 21:30:34 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
23 Oct 21:30:34 INFO   [config.XMLConfiguration] - Wrote configuration to /opt/geoserver/data_dir/gwc
23 Oct 21:31:31 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
23 Oct 21:31:31 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
23 Oct 21:31:31 CONFIG [gwc.layer] - Loaded 2 tile layers in 7.075 ms
23 Oct 21:31:31 INFO   [jdbc.JDBCQuotaStore] - Closing up the JDBC quota store 
23 Oct 21:31:31 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@6065d77c[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@71f63cb] rejected from java.util.concurrent.ThreadPoolExecutor@7a336dcc[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
23 Oct 21:31:31 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
CONFIG 2024-10-23 21:31:44,759 [main][Log4J2Logger.java:215] : Logging policy: Log4J2
CONFIG 2024-10-23 21:31:44,874 [main][Log4J2Logger.java:189] : Factory implementations for category GridCoverageFactory:
  org.geotools.coverage.grid.GridCoverageFactory
CONFIG 2024-10-23 21:31:45,182 [main][Log4J2Logger.java:189] : Factory implementations for category FilterFactory:
  org.geotools.filter.FilterFactoryImpl
CONFIG 2024-10-23 21:31:45,194 [main][Log4J2Logger.java:189] : Factory implementations for category StyleFactory:
  org.geotools.styling.StyleFactoryImpl
CONFIG 2024-10-23 21:31:45,202 [main][Log4J2Logger.java:189] : Factory implementations for category FeatureFactory:
  org.geotools.feature.LenientFeatureFactoryImpl
  org.geotools.feature.ValidatingFeatureFactoryImpl
DEBUG 2024-10-23 21:31:45,435 [main][Log4J2Logger.java:220] : Extension lookup 'XStreamPersisterInitializer', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:31:45,452 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:31:45,454 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionProvider', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:31:45,454 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:31:45,473 [main][Log4J2Logger.java:220] : CONFIGURING GEOSERVER LOGGING -------------------------
23 Oct 21:31:45 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
23 Oct 21:31:47 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
23 Oct 21:31:47 CONFIG [org.geoserver] - Loading catalog /opt/geoserver/data_dir
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'generic'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'backbone_wide'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'backbone_narrow'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'line'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'point'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'polygon'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'raster'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'regional_subbasin'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'regional_subbasin_wide'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'watershed_purple'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'watershed'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'watershed_name_only'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'watershed_outline_only'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'watershed_yellow'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded style 'watershed_purple_outline_only'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded default workspace 'Nebula'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded workspace 'Nebula'
23 Oct 21:31:47 CONFIG [org.geoserver] - Loaded data store 'GeoServerSqlDataSource', enabled
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded feature type 'Watersheds', enabled
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded layer 'Watersheds'
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded feature type 'RegionalSubbasins', enabled
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded layer 'RegionalSubbasins'
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded feature type 'Backbones', enabled
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded layer 'Backbones'
23 Oct 21:31:48 CONFIG [org.geoserver] - Read catalog in 1.354 s
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded service 'wms', enabled
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-7d001e9:192bb4b043b:-8000', enabled
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded service 'csw', enabled
23 Oct 21:31:48 CONFIG [org.geoserver] - Loaded service 'WPSInfoImpl-75c32c4c:17151e9e653:-8000', enabled
23 Oct 21:31:48 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:31:48 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
23 Oct 21:31:48 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver/data_dir/gwc
23 Oct 21:31:48 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
23 Oct 21:31:48 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver/data_dir/gwc
23 Oct 21:31:48 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
23 Oct 21:31:48 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
23 Oct 21:31:48 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
23 Oct 21:31:48 CONFIG [gwc.layer] - Loaded 2 tile layers in 16.71 ms
23 Oct 21:31:48 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver/data_dir/gwc contained no blob store infos.
23 Oct 21:31:48 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver/data_dir/gwc, using it as the default prefix.
23 Oct 21:31:49 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
23 Oct 21:31:50 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
23 Oct 21:31:50 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
23 Oct 21:31:50 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
23 Oct 21:31:50 INFO   [flow.config] - Loaded control-flow rule: user=6
23 Oct 21:31:50 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
23 Oct 21:31:50 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
23 Oct 21:31:50 CONFIG [geoserver.flow] - Control-flow active with 6 flow controllers
23 Oct 21:31:51 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:31:51 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:31:51 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:31:51 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:31:51 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
23 Oct 21:31:51 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
23 Oct 21:31:51 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
23 Oct 21:31:51 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
23 Oct 21:31:52 INFO   [geoserver.monitor] - Monitor extension enabled
23 Oct 21:31:53 CONFIG [geoserver.wps] - Found 5 bindable processes in GeoServer specific processes
23 Oct 21:31:53 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
23 Oct 21:31:53 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
23 Oct 21:31:53 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
23 Oct 21:31:53 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
23 Oct 21:31:53 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
23 Oct 21:31:53 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
23 Oct 21:31:53 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
23 Oct 21:31:53 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
23 Oct 21:31:53 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
23 Oct 21:31:53 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
23 Oct 21:31:53 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
23 Oct 21:31:53 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:31:53 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:31:54 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:31:54 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
23 Oct 21:31:54 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
23 Oct 21:31:54 CONFIG [diskquota.DiskQuotaMonitor] - 2 layers attached to global quota 20.0 GB
23 Oct 21:31:54 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
23 Oct 21:31:54 CONFIG [geoserver.security] - Start reloading user/groups for service named default
23 Oct 21:31:54 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
23 Oct 21:31:54 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
23 Oct 21:31:54 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
23 Oct 21:32:07 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
23 Oct 21:32:07 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
23 Oct 21:32:07 CONFIG [gwc.layer] - Loaded 2 tile layers in 12.07 ms
23 Oct 21:32:07 INFO   [jdbc.JDBCQuotaStore] - Closing up the JDBC quota store 
23 Oct 21:32:07 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@5291f2dc[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@2d849e3d] rejected from java.util.concurrent.ThreadPoolExecutor@43cc7e9f[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
23 Oct 21:32:07 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
CONFIG 2024-10-23 21:32:18,654 [main][Log4J2Logger.java:215] : Logging policy: Log4J2
CONFIG 2024-10-23 21:32:18,741 [main][Log4J2Logger.java:189] : Factory implementations for category GridCoverageFactory:
  org.geotools.coverage.grid.GridCoverageFactory
CONFIG 2024-10-23 21:32:18,881 [main][Log4J2Logger.java:189] : Factory implementations for category FilterFactory:
  org.geotools.filter.FilterFactoryImpl
CONFIG 2024-10-23 21:32:18,889 [main][Log4J2Logger.java:189] : Factory implementations for category StyleFactory:
  org.geotools.styling.StyleFactoryImpl
CONFIG 2024-10-23 21:32:18,893 [main][Log4J2Logger.java:189] : Factory implementations for category FeatureFactory:
  org.geotools.feature.LenientFeatureFactoryImpl
  org.geotools.feature.ValidatingFeatureFactoryImpl
DEBUG 2024-10-23 21:32:19,054 [main][Log4J2Logger.java:220] : Extension lookup 'XStreamPersisterInitializer', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:32:19,055 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:32:19,056 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionProvider', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:32:19,056 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:32:19,069 [main][Log4J2Logger.java:220] : CONFIGURING GEOSERVER LOGGING -------------------------
23 Oct 21:32:19 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
23 Oct 21:32:20 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
23 Oct 21:32:20 CONFIG [org.geoserver] - Loading catalog /opt/geoserver/data_dir
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'generic'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'backbone_narrow'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'backbone_wide'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'line'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'point'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'raster'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'polygon'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'regional_subbasin'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'watershed_name_only'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'regional_subbasin_wide'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'watershed'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'watershed_outline_only'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'watershed_purple_outline_only'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'watershed_yellow'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded style 'watershed_purple'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded default workspace 'Nebula'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded workspace 'Nebula'
23 Oct 21:32:20 CONFIG [org.geoserver] - Loaded data store 'GeoServerSqlDataSource', enabled
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded feature type 'Watersheds', enabled
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded layer 'Watersheds'
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded feature type 'RegionalSubbasins', enabled
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded layer 'RegionalSubbasins'
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded feature type 'Backbones', enabled
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded layer 'Backbones'
23 Oct 21:32:21 CONFIG [org.geoserver] - Read catalog in 953.2 ms
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded service 'wms', enabled
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-6f137e23:192bb4b842d:-8000', enabled
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded service 'csw', enabled
23 Oct 21:32:21 CONFIG [org.geoserver] - Loaded service 'WPSInfoImpl-75c32c4c:17151e9e653:-8000', enabled
23 Oct 21:32:21 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:32:21 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
23 Oct 21:32:21 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver/data_dir/gwc
23 Oct 21:32:21 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
23 Oct 21:32:21 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver/data_dir/gwc
23 Oct 21:32:21 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
23 Oct 21:32:21 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
23 Oct 21:32:21 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
23 Oct 21:32:21 CONFIG [gwc.layer] - Loaded 2 tile layers in 10.69 ms
23 Oct 21:32:21 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver/data_dir/gwc contained no blob store infos.
23 Oct 21:32:21 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver/data_dir/gwc, using it as the default prefix.
23 Oct 21:32:21 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
23 Oct 21:32:22 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
23 Oct 21:32:22 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
23 Oct 21:32:22 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
23 Oct 21:32:22 INFO   [flow.config] - Loaded control-flow rule: user=6
23 Oct 21:32:22 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
23 Oct 21:32:22 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
23 Oct 21:32:22 CONFIG [geoserver.flow] - Control-flow active with 6 flow controllers
23 Oct 21:32:22 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:32:22 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:32:22 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:32:22 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:32:23 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
23 Oct 21:32:23 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
23 Oct 21:32:23 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
23 Oct 21:32:23 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
23 Oct 21:32:24 INFO   [geoserver.monitor] - Monitor extension enabled
23 Oct 21:32:25 CONFIG [geoserver.wps] - Found 5 bindable processes in GeoServer specific processes
23 Oct 21:32:25 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
23 Oct 21:32:25 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
23 Oct 21:32:25 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
23 Oct 21:32:25 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
23 Oct 21:32:25 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
23 Oct 21:32:25 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
23 Oct 21:32:25 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
23 Oct 21:32:25 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
23 Oct 21:32:25 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
23 Oct 21:32:25 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
23 Oct 21:32:25 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
23 Oct 21:32:25 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:32:25 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:32:25 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:32:26 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
23 Oct 21:32:26 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
23 Oct 21:32:26 CONFIG [diskquota.DiskQuotaMonitor] - 2 layers attached to global quota 20.0 GB
23 Oct 21:32:26 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
23 Oct 21:32:26 CONFIG [geoserver.security] - Start reloading user/groups for service named default
23 Oct 21:32:26 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
23 Oct 21:32:26 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
23 Oct 21:32:26 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
CONFIG 2024-10-23 21:35:30,814 [main][Log4J2Logger.java:215] : Logging policy: Log4J2
CONFIG 2024-10-23 21:35:30,891 [main][Log4J2Logger.java:189] : Factory implementations for category GridCoverageFactory:
  org.geotools.coverage.grid.GridCoverageFactory
CONFIG 2024-10-23 21:35:31,022 [main][Log4J2Logger.java:189] : Factory implementations for category FilterFactory:
  org.geotools.filter.FilterFactoryImpl
CONFIG 2024-10-23 21:35:31,030 [main][Log4J2Logger.java:189] : Factory implementations for category StyleFactory:
  org.geotools.styling.StyleFactoryImpl
CONFIG 2024-10-23 21:35:31,033 [main][Log4J2Logger.java:189] : Factory implementations for category FeatureFactory:
  org.geotools.feature.LenientFeatureFactoryImpl
  org.geotools.feature.ValidatingFeatureFactoryImpl
DEBUG 2024-10-23 21:35:31,171 [main][Log4J2Logger.java:220] : Extension lookup 'XStreamPersisterInitializer', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:35:31,172 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:35:31,173 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionProvider', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:35:31,173 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:35:31,185 [main][Log4J2Logger.java:220] : CONFIGURING GEOSERVER LOGGING -------------------------
23 Oct 21:35:31 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
23 Oct 21:35:32 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
23 Oct 21:35:32 CONFIG [org.geoserver] - Loading catalog /opt/geoserver/data_dir
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'generic'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'backbone_narrow'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'line'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'backbone_wide'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'point'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'raster'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'polygon'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'regional_subbasin'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'regional_subbasin_wide'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'watershed'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'watershed_name_only'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'watershed_outline_only'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'watershed_purple'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'watershed_purple_outline_only'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded style 'watershed_yellow'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded default workspace 'Nebula'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded workspace 'Nebula'
23 Oct 21:35:32 CONFIG [org.geoserver] - Loaded data store 'GeoServerSqlDataSource', enabled
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded feature type 'Watersheds', enabled
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded layer 'Watersheds'
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded feature type 'RegionalSubbasins', enabled
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded layer 'RegionalSubbasins'
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded feature type 'Backbones', enabled
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded layer 'Backbones'
23 Oct 21:35:33 CONFIG [org.geoserver] - Read catalog in 872.4 ms
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded service 'wms', enabled
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-7fcc5591:192bb4e71b2:-8000', enabled
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded service 'csw', enabled
23 Oct 21:35:33 CONFIG [org.geoserver] - Loaded service 'WPSInfoImpl-75c32c4c:17151e9e653:-8000', enabled
23 Oct 21:35:33 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:35:33 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
23 Oct 21:35:33 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver/data_dir/gwc
23 Oct 21:35:33 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
23 Oct 21:35:33 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver/data_dir/gwc
23 Oct 21:35:33 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
23 Oct 21:35:33 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
23 Oct 21:35:33 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
23 Oct 21:35:33 CONFIG [gwc.layer] - Loaded 2 tile layers in 9.633 ms
23 Oct 21:35:33 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver/data_dir/gwc contained no blob store infos.
23 Oct 21:35:33 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver/data_dir/gwc, using it as the default prefix.
23 Oct 21:35:33 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
23 Oct 21:35:34 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
23 Oct 21:35:34 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
23 Oct 21:35:34 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
23 Oct 21:35:34 INFO   [flow.config] - Loaded control-flow rule: user=6
23 Oct 21:35:34 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
23 Oct 21:35:34 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
23 Oct 21:35:34 CONFIG [geoserver.flow] - Control-flow active with 6 flow controllers
23 Oct 21:35:34 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:35:34 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:35:34 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:35:34 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:35:34 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
23 Oct 21:35:35 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
23 Oct 21:35:35 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
23 Oct 21:35:35 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
23 Oct 21:35:35 INFO   [geoserver.monitor] - Monitor extension enabled
23 Oct 21:35:37 CONFIG [geoserver.wps] - Found 5 bindable processes in GeoServer specific processes
23 Oct 21:35:37 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
23 Oct 21:35:37 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
23 Oct 21:35:37 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
23 Oct 21:35:37 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
23 Oct 21:35:37 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
23 Oct 21:35:37 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
23 Oct 21:35:37 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
23 Oct 21:35:37 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
23 Oct 21:35:37 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
23 Oct 21:35:37 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
23 Oct 21:35:37 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
23 Oct 21:35:37 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:35:37 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:35:37 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:35:37 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
23 Oct 21:35:37 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
23 Oct 21:35:37 CONFIG [diskquota.DiskQuotaMonitor] - 2 layers attached to global quota 20.0 GB
23 Oct 21:35:37 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
23 Oct 21:35:37 CONFIG [geoserver.security] - Start reloading user/groups for service named default
23 Oct 21:35:37 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
23 Oct 21:35:37 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
23 Oct 21:35:37 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
CONFIG 2024-10-23 21:40:40,642 [main][Log4J2Logger.java:215] : Logging policy: Log4J2
CONFIG 2024-10-23 21:40:40,727 [main][Log4J2Logger.java:189] : Factory implementations for category GridCoverageFactory:
  org.geotools.coverage.grid.GridCoverageFactory
CONFIG 2024-10-23 21:40:40,873 [main][Log4J2Logger.java:189] : Factory implementations for category FilterFactory:
  org.geotools.filter.FilterFactoryImpl
CONFIG 2024-10-23 21:40:40,882 [main][Log4J2Logger.java:189] : Factory implementations for category StyleFactory:
  org.geotools.styling.StyleFactoryImpl
CONFIG 2024-10-23 21:40:40,885 [main][Log4J2Logger.java:189] : Factory implementations for category FeatureFactory:
  org.geotools.feature.LenientFeatureFactoryImpl
  org.geotools.feature.ValidatingFeatureFactoryImpl
DEBUG 2024-10-23 21:40:41,024 [main][Log4J2Logger.java:220] : Extension lookup 'XStreamPersisterInitializer', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:40:41,024 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:40:41,026 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionProvider', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:40:41,026 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:40:41,038 [main][Log4J2Logger.java:220] : CONFIGURING GEOSERVER LOGGING -------------------------
23 Oct 21:40:41 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
23 Oct 21:40:42 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
23 Oct 21:40:42 CONFIG [org.geoserver] - Loading catalog /opt/geoserver/data_dir
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'backbone_wide'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'backbone_narrow'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'generic'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'line'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'point'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'raster'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'polygon'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'regional_subbasin'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'watershed'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'watershed_name_only'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'regional_subbasin_wide'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'watershed_outline_only'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'watershed_purple'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'watershed_yellow'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded style 'watershed_purple_outline_only'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded default workspace 'Nebula'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded workspace 'Nebula'
23 Oct 21:40:42 CONFIG [org.geoserver] - Loaded data store 'GeoServerSqlDataSource', enabled
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded feature type 'Watersheds', enabled
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded layer 'Watersheds'
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded feature type 'RegionalSubbasins', enabled
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded layer 'RegionalSubbasins'
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded feature type 'Backbones', enabled
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded layer 'Backbones'
23 Oct 21:40:43 CONFIG [org.geoserver] - Read catalog in 893.6 ms
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded service 'wms', enabled
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--34ec83fe:192bb532c33:-8000', enabled
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded service 'csw', enabled
23 Oct 21:40:43 CONFIG [org.geoserver] - Loaded service 'WPSInfoImpl-75c32c4c:17151e9e653:-8000', enabled
23 Oct 21:40:43 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:40:43 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
23 Oct 21:40:43 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver/data_dir/gwc
23 Oct 21:40:43 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
23 Oct 21:40:43 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver/data_dir/gwc
23 Oct 21:40:43 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
23 Oct 21:40:43 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
23 Oct 21:40:43 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
23 Oct 21:40:43 CONFIG [gwc.layer] - Loaded 2 tile layers in 12.53 ms
23 Oct 21:40:43 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver/data_dir/gwc contained no blob store infos.
23 Oct 21:40:43 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver/data_dir/gwc, using it as the default prefix.
23 Oct 21:40:43 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
23 Oct 21:40:44 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
23 Oct 21:40:44 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
23 Oct 21:40:44 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
23 Oct 21:40:44 INFO   [flow.config] - Loaded control-flow rule: user=6
23 Oct 21:40:44 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
23 Oct 21:40:44 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
23 Oct 21:40:44 CONFIG [geoserver.flow] - Control-flow active with 6 flow controllers
23 Oct 21:40:44 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:40:44 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:40:44 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:40:44 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:40:44 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
23 Oct 21:40:45 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
23 Oct 21:40:45 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
23 Oct 21:40:45 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
23 Oct 21:40:45 INFO   [geoserver.monitor] - Monitor extension enabled
23 Oct 21:40:47 CONFIG [geoserver.wps] - Found 5 bindable processes in GeoServer specific processes
23 Oct 21:40:47 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
23 Oct 21:40:47 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
23 Oct 21:40:47 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
23 Oct 21:40:47 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
23 Oct 21:40:47 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
23 Oct 21:40:47 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
23 Oct 21:40:47 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
23 Oct 21:40:47 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
23 Oct 21:40:47 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
23 Oct 21:40:47 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
23 Oct 21:40:47 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
23 Oct 21:40:47 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:40:47 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:40:47 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:40:47 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
23 Oct 21:40:47 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
23 Oct 21:40:47 CONFIG [diskquota.DiskQuotaMonitor] - 2 layers attached to global quota 20.0 GB
23 Oct 21:40:47 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
23 Oct 21:40:47 CONFIG [geoserver.security] - Start reloading user/groups for service named default
23 Oct 21:40:47 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
23 Oct 21:40:47 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
23 Oct 21:40:47 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
CONFIG 2024-10-23 21:52:11,050 [main][Log4J2Logger.java:215] : Logging policy: Log4J2
CONFIG 2024-10-23 21:52:11,130 [main][Log4J2Logger.java:189] : Factory implementations for category GridCoverageFactory:
  org.geotools.coverage.grid.GridCoverageFactory
CONFIG 2024-10-23 21:52:11,290 [main][Log4J2Logger.java:189] : Factory implementations for category FilterFactory:
  org.geotools.filter.FilterFactoryImpl
CONFIG 2024-10-23 21:52:11,299 [main][Log4J2Logger.java:189] : Factory implementations for category StyleFactory:
  org.geotools.styling.StyleFactoryImpl
CONFIG 2024-10-23 21:52:11,302 [main][Log4J2Logger.java:189] : Factory implementations for category FeatureFactory:
  org.geotools.feature.LenientFeatureFactoryImpl
  org.geotools.feature.ValidatingFeatureFactoryImpl
DEBUG 2024-10-23 21:52:11,452 [main][Log4J2Logger.java:220] : Extension lookup 'XStreamPersisterInitializer', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:52:11,453 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', prior to bean geoserverExtensions initialisation.
DEBUG 2024-10-23 21:52:11,454 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionProvider', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:52:11,454 [main][Log4J2Logger.java:220] : Extension lookup 'ExtensionFilter', but provided ApplicationContext is unset.
DEBUG 2024-10-23 21:52:11,467 [main][Log4J2Logger.java:220] : CONFIGURING GEOSERVER LOGGING -------------------------
23 Oct 21:52:11 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
23 Oct 21:52:12 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
23 Oct 21:52:12 CONFIG [org.geoserver] - Loading catalog /opt/geoserver/data_dir
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'line'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'generic'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'backbone_wide'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'backbone_narrow'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'raster'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'point'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'regional_subbasin'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'polygon'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'watershed'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'watershed_outline_only'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'watershed_name_only'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'regional_subbasin_wide'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'watershed_purple_outline_only'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'watershed_purple'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded style 'watershed_yellow'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded default workspace 'Nebula'
23 Oct 21:52:12 CONFIG [org.geoserver] - Loaded workspace 'Nebula'
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded data store 'GeoServerSqlDataSource', enabled
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded feature type 'RegionalSubbasins', enabled
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded layer 'RegionalSubbasins'
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded feature type 'Watersheds', enabled
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded layer 'Watersheds'
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded feature type 'Backbones', enabled
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded layer 'Backbones'
23 Oct 21:52:13 CONFIG [org.geoserver] - Read catalog in 1.221 s
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl--1f185074:192bb5db67d:-8000', enabled
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl--1f185074:192bb5db67d:-7fff', enabled
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--1f185074:192bb5db67d:-7ffe', enabled
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl--1f185074:192bb5db67d:-7ffd', enabled
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded service 'csw', enabled
23 Oct 21:52:13 CONFIG [org.geoserver] - Loaded service 'WPSInfoImpl-75c32c4c:17151e9e653:-8000', enabled
23 Oct 21:52:14 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:52:14 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
23 Oct 21:52:14 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver/data_dir/gwc
23 Oct 21:52:14 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
23 Oct 21:52:14 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver/data_dir/gwc
23 Oct 21:52:14 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
23 Oct 21:52:14 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
23 Oct 21:52:14 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
23 Oct 21:52:14 CONFIG [gwc.layer] - Loaded 2 tile layers in 11.14 ms
23 Oct 21:52:14 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver/data_dir/gwc contained no blob store infos.
23 Oct 21:52:14 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver/data_dir/gwc, using it as the default prefix.
23 Oct 21:52:14 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
23 Oct 21:52:14 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
23 Oct 21:52:14 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
23 Oct 21:52:14 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
23 Oct 21:52:14 INFO   [flow.config] - Loaded control-flow rule: user=6
23 Oct 21:52:14 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
23 Oct 21:52:14 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
23 Oct 21:52:14 CONFIG [geoserver.flow] - Control-flow active with 6 flow controllers
23 Oct 21:52:15 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:52:15 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver/data_dir/gwc'.
23 Oct 21:52:15 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:52:15 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:52:15 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
23 Oct 21:52:16 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
23 Oct 21:52:16 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
23 Oct 21:52:16 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
23 Oct 21:52:16 INFO   [geoserver.monitor] - Monitor extension enabled
23 Oct 21:52:17 CONFIG [geoserver.wps] - Found 5 bindable processes in GeoServer specific processes
23 Oct 21:52:17 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
23 Oct 21:52:17 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
23 Oct 21:52:17 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
23 Oct 21:52:17 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
23 Oct 21:52:17 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
23 Oct 21:52:17 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
23 Oct 21:52:17 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
23 Oct 21:52:17 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
23 Oct 21:52:17 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
23 Oct 21:52:17 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
23 Oct 21:52:17 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
23 Oct 21:52:17 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:52:17 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
23 Oct 21:52:18 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver/data_dir/gwc/geowebcache-diskquota.xml
23 Oct 21:52:18 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
23 Oct 21:52:18 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
23 Oct 21:52:18 CONFIG [diskquota.DiskQuotaMonitor] - 2 layers attached to global quota 20.0 GB
23 Oct 21:52:18 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
23 Oct 21:52:18 CONFIG [geoserver.security] - Start reloading user/groups for service named default
23 Oct 21:52:18 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
23 Oct 21:52:18 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
23 Oct 21:52:18 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
24 Oct 14:14:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:43 WARN   [geotools.jdbc] - Could not find mapping for 'PrimaryKey', ignoring the column and setting the feature type read only
24 Oct 14:14:43 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:43 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:43 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:43 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:43 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:43 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:43 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 2
24 Oct 14:14:43 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:43 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
24 Oct 14:14:43 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 4
24 Oct 14:14:43 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 3
24 Oct 14:14:43 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 4
24 Oct 14:14:43 WARN   [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
24 Oct 14:14:43 WARN   [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
24 Oct 14:14:43 WARN   [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
24 Oct 14:14:43 WARN   [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
24 Oct 14:14:43 WARN   [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
24 Oct 14:14:43 WARN   [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
24 Oct 14:14:43 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3962495.5463035386,-13081127.272611925,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:43 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3972279.485924042,-13110479.091473432,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:43 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3982063.4255445427,-13081127.272611925,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:43 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3982063.4255445427,-13090911.212232428,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 1
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3962495.5463035386,-13110479.091473432,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3972279.485924042,-13081127.272611925,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3962495.5463035386,-13090911.212232428,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3972279.485924042,-13090911.212232428,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3982063.4255445427,-13110479.091473432,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3972279.485924042,-13100695.15185293,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3982063.4255445427,-13100695.15185293,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3962495.5463035386,-13100695.15185293,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3982063.4255445427,-13110479.091473432,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3972279.485924042,-13110479.091473432,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3962495.5463035386,-13110479.091473432,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3982063.4255445427,-13081127.272611925,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3962495.5463035386,-13081127.272611925,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3972279.485924042,-13081127.272611925,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 1
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3962495.5463035386,-13100695.15185293,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3962495.5463035386,-13090911.212232428,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:44 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3972279.485924042,-13100695.15185293,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3982063.4255445427,-13100695.15185293,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3982063.4255445427,-13090911.212232428,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
24 Oct 14:14:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3972279.485924042,-13090911.212232428,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:44 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:44 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
24 Oct 14:14:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:58 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:58 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 1
24 Oct 14:14:58 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:58 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:58 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 1
24 Oct 14:14:58 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
24 Oct 14:14:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:58 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:58 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:14:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:58 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:58 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:58 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:58 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3977171.455734291,-13086019.242422175,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3977171.455734291,-13100695.15185293,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3972279.485924042,-13100695.15185293,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3977171.455734291,-13095803.182042679,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3977171.455734291,-13090911.212232428,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3982063.4255445427,-13095803.182042679,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 1
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3972279.485924042,-13105587.121663181,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3982063.4255445427,-13086019.242422175,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3982063.4255445427,-13086019.242422175,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3972279.485924042,-13090911.212232428,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3977171.455734291,-13105587.121663181,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 1
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3972279.485924042,-13095803.182042679,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3972279.485924042,-13086019.242422175,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3982063.4255445427,-13105587.121663181,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3977171.455734291,-13095803.182042679,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3977171.455734291,-13105587.121663181,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3977171.455734291,-13100695.15185293,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 1
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3977171.455734291,-13086019.242422175,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3982063.4255445427,-13095803.182042679,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3972279.485924042,-13086019.242422175,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3972279.485924042,-13095803.182042679,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3977171.455734291,-13090911.212232428,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 1
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3982063.4255445427,-13090911.212232428,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3982063.4255445427,-13090911.212232428,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3982063.4255445427,-13105587.121663181,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:14:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:14:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3972279.485924042,-13090911.212232428,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3972279.485924042,-13100695.15185293,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3982063.4255445427,-13100695.15185293,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3972279.485924042,-13105587.121663181,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
24 Oct 14:14:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3982063.4255445427,-13100695.15185293,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:14:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:14:59 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 3
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 2
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 1
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3982063.4255445427,-13100695.15185293,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3977171.455734291,-13095803.182042679,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3982063.4255445427,-13095803.182042679,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3972279.485924042,-13095803.182042679,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3977171.455734291,-13100695.15185293,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3977171.455734291,-13090911.212232428,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 2
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 2
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3982063.4255445427,-13105587.121663181,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3972279.485924042,-13086019.242422175,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3972279.485924042,-13090911.212232428,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3982063.4255445427,-13090911.212232428,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3972279.485924042,-13100695.15185293,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3977171.455734291,-13086019.242422175,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 1
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3982063.4255445427,-13086019.242422175,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3972279.485924042,-13105587.121663181,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3977171.455734291,-13105587.121663181,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
24 Oct 14:15:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:04 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 4
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 3
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 2
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 3
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3977171.455734291,-13100695.15185293,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3982063.4255445427,-13095803.182042679,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3972279.485924042,-13095803.182042679,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3982063.4255445427,-13100695.15185293,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 1
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3095803182042679E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3977171.455734291,-13095803.182042679,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3977171.455734291,-13090911.212232428,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3982063.4255445427,-13105587.121663181,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3982063.4255445427,-13086019.242422175,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3982063.4255445427 : 3986955.3953547934]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3982063.4255445427,-13090911.212232428,3986955.3953547934, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3095803182042679E7 : -1.3090911212232428E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13095803.182042679,3972279.485924042,-13090911.212232428,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 1
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 1
24 Oct 14:15:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3105587121663181E7 : -1.310069515185293E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13105587.121663181,3972279.485924042,-13100695.15185293,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3977171.455734291,-13105587.121663181,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3972279.485924042,-13086019.242422175,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.3105587121663181E7, 3972279.485924042 : 3977171.455734291]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3972279.485924042,-13105587.121663181,3977171.455734291, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
24 Oct 14:15:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3086019242422175E7, 3977171.455734291 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3977171.455734291,-13086019.242422175,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:07 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:15 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:15 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:15 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 1
24 Oct 14:15:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 1
24 Oct 14:15:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 2
24 Oct 14:15:15 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:15 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:15 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
24 Oct 14:15:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3982063.4255445427,-13100695.15185293,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3982063.4255445427,-13090911.212232428,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:15 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:15:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:15 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3972279.485924042,-13100695.15185293,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3982063.4255445427,-13110479.091473432,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3962495.5463035386,-13081127.272611925,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:15 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:15:15 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:15:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:15 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3972279.485924042,-13090911.212232428,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:15 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:15 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 1
24 Oct 14:15:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3982063.4255445427,-13081127.272611925,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3982063.4255445427,-13110479.091473432,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 1
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3982063.4255445427,-13090911.212232428,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3972279.485924042,-13110479.091473432,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 2
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3962495.5463035386,-13110479.091473432,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3972279.485924042,-13090911.212232428,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3972279.485924042,-13081127.272611925,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3972279.485924042,-13100695.15185293,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3962495.5463035386,-13081127.272611925,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3972279.485924042,-13081127.272611925,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 2
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 1
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3982063.4255445427,-13100695.15185293,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3962495.5463035386,-13090911.212232428,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3972279.485924042 : 3982063.4255445427]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3972279.485924042,-13110479.091473432,3982063.4255445427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3090911212232428E7 : -1.3081127272611925E7, 3982063.4255445427 : 3991847.365165045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13090911.212232428,3982063.4255445427,-13081127.272611925,3991847.365165045, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 1
24 Oct 14:15:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.310069515185293E7 : -1.3090911212232428E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13100695.15185293,3962495.5463035386,-13090911.212232428,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3120263031093935E7 : -1.3110479091473432E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13120263.031093935,3962495.5463035386,-13110479.091473432,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@ad124e19]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3962495.5463035386,-13100695.15185293,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Watersheds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=watershed_purple_outline_only]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
24 Oct 14:15:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8125/geoserver/
	Bbox = SRSEnvelope[-1.3110479091473432E7 : -1.310069515185293E7, 3962495.5463035386 : 3972279.485924042]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@1eb70339]
	MaxFeatures = null
	Palette = null
	RawKvp = {TILED=true, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:3857, BBOX=-13110479.091473432,3962495.5463035386,-13100695.15185293,3972279.485924042, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=Nebula:Backbones}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=backbone_wide]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
24 Oct 14:15:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
24 Oct 14:15:16 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
